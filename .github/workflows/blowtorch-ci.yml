name: Blowtorch Tests And Formatting

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.platform }} ${{ matrix.python-version }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: [3.9]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Run Rust test
      working-directory: ./rust
      run: cargo test && cd ..

    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      working-directory: ./python
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install library
      working-directory: ./python
      run: poetry install --no-interaction
  
    - name: Run integration test
      working-directory: ./tests
      run: |
        source ../python/.venv/bin/activate
        sh mnist_test.sh

    - name: Build the documentation
      working-directory: ./docs
      run: |
        source ../python/.venv/bin/activate
        make html
